script.
    let helper;
    let query = "!{query}";
    let day = "!{day}";
    (async function() {
        helper = await import('/js/module-helper.js');
        if(!helper) {
            console.error('Error setting up module helper.');
            return;
        }
        c = new helper.ModuleHelper('hours', '/labour/hours');
        c.setup(query);
    })();
    $(document).ready(() => {

        $('#add-hours').click(() => {
            let defaultDate = $('#default-date').find('input').val();
            addHours(c, null, defaultDate);
        });

        $('#default-date input').keyup((e) => {
            if(e.which == 13)
                $('#add-hours').click()
        });

        $(document).on('click', '.edit-hours', editHours);

        function editHours() {
            var id = $(this).closest('tr').data('id');
            $.get('/labour/hours/edit', { id }, ret => {
                var data = getJSON(ret);
                if(data == null) return false;
                n = noty({
                    text: 'Edit hours',
                    type: 'confirm',
                    layout: 'center',
                    template: data.html,
                    dismissQueue: false,
                    theme: 'cryogen',
                    buttons: [{
                        addClass: 'btn btn-primary submit-btn', text: 'Edit', onClick: ($noty) => {
                            let name = $('#name').val();
                            let date = $('#date').val();
                            let startTime = $('#start').val();
                            let endTime = $('#end').val();
                            let breakTime = $('#break').val();
                            let role = $('option:selected').val();
                            if(!name || !date || !startTime || !endTime) {
                                sendAlert('All fields other than break time must be filled out.');
                                return false;
                            }
                            $.post('/labour/hours/edit', { id, name, date, startTime, endTime, breakTime, role }, (ret) => {
                                var data = getJSON(ret);
                                if(data == null) return false;
                                sendAlert('Hours edited successfully');
                                closeNoty($noty);
                                c.loadList();
                            });
                        }
                    },
                    {
                        addClass: 'btn btn-danger', text: 'Remove', onClick: ($noty) => {
                            $.post('/labour/hours/delete', { id }, (ret) => {
                                let data = getJSON(ret);
                                if(data == null) return false;
                                sendAlert('Hour data has been successfully deleted.');
                                closeNoty($noty);
                                c.loadList();
                            })
                        }
                    },
                    {
                        addClass: 'btn btn-danger', text: 'Cancel', onClick: closeNoty
                    }]
                });
            });
        }

    });
div#hours
    h5 Employee Hours
    p.small.info The following is a list of hours an employee has worked including overtime information
    p.small.info Use the buttons on the right to search for an employee's hours between certain dates.
    div.row
        div.iactions
            div
                div(style='float: left; margin: 10px 10px')
                    div.col-xs-4
                        p.color-grey.search-info Click the search icon to begin searching through employee hours. Search using filters with filter:value and separate with commas. True/false or yes/no can be used.
                    div.col-xs-4
                        p.color-grey.search-info Filters: first_name: (name), last_name: (name), full_name: (name), date: (date in MM/dd/yyyy), overtime: (true or false), role_name: (name of role)
                    div.col-xs-4
                        p.color-grey.search-info Example: first_name: tristan, overtime: true, role_name: cook
                div(style='float: right; margin: 33.5px 5px;')
                    div#default-date
                        input.form-control(type='text', placeholder='Search', value=(day ? day : formatter.formatDate(-1, 'MM/dd/yyyy')), style='max-width: 130px; max-height: 20px; margin-bottom: 5px; background: #111; border: #000; display: inline!important;')
                    div.link#add-hours
                        i.fa.fa-plus-square
                        span  Add Hours
    div.row(style='padding: 15px;')
        div#search(style='clear: both; float: right; margin-bottom: 15px; text-align: left;')
            div
                span.fa.fa-search.link#search-icon(style='display: inline; float: right; padding-left: 5px; margin-top: 7px;')
                div#search-pin(style='float: right; display: none;', display='none')
                    input.form-control(type='text', placeholder='Search', style='max-width: 150px; max-height: 30px; background: #111; border: #000; display: inline!important;')
        div.search-filters(style='clear: both; float: right;')
        div.col-md-12(style='border: 1px solid #000; clear: both; margin-bottom: 10px;')
        div#main
        div.pages
            div#pages
