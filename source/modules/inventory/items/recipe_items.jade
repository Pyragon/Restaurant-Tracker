script.
    let c;
    (async function() {
        import('/js/module-helper.js').then(mod => {
            c = new mod.ModuleHelper('recipe-items', '/inventory/recipe-items');
            c.setup();
        });
    })();
    $(document).ready(() => {

        $(document).on('click', '.edit-recipe-item', editRecipeItem);
        $('#add-recipe').click(addRecipeItem);

        function addRecipeItem() {
            $.get('/inventory/recipe-items/edit', { }, ret => {
                let data = getJSON(ret);
                if(data == null) return false;
                n = noty({
                    text: 'Add Recipe Item',
                    type: 'confirm',
                    layout: 'centerScroll',
                    template: data.html,
                    dismissQueue: false,
                    theme: 'cryogen',
                    buttons: [{
                        addClass: 'btn btn-primary submit-btn', text: 'Add', onClick: ($noty) => {
                            var itemName = $('input[data-name="item-name"]').val();
                            var billName = $('input[data-name="bill-name"]').val();
                            var price = $('input[data-name="price"]').val();
                            var recipe = [];
                            $('.modal-input-array').each(function(index) {
                                var key = $(this).find('.name').val();
                                var value = $(this).find('.value').val();
                                if(key == null || value == null) return;
                                recipe.push({key, value});
                            });
                            $.post('/inventory/recipe-items/add', { itemName, billName, price, recipe: JSON.stringify(recipe) }, (ret) => {
                                var data = getJSON(ret);
                                if(data == null) return false;
                                closeNoty($noty);
                                sendAlert('Successfully added item.');
                                c.loadList();
                            });
                        }
                    },
                    {
                        addClass: 'btn btn-danger', text: 'Cancel', onClick: closeNoty
                    }]
                });
            });
        }

        function editRecipeItem() {
            var id = $(this).closest('tr').data('id');
            $.get('/inventory/recipe-items/edit', { id }, (ret) => {
                var data = getJSON(ret);
                if(data == null) return false;
                n = noty({
                    text: 'Edit Recipe Item',
                    type: 'confirm',
                    layout: 'centerScroll',
                    template: data.html,
                    dismissQueue: false,
                    theme: 'cryogen',
                    buttons: [{
                        addClass: 'btn btn-primary submit-btn', text: 'Edit', onClick: ($noty) => {
                            var itemName = $('input[data-name="item-name"]').val();
                            var billName = $('input[data-name="bill-name"]').val();
                            var price = $('input[data-name="price"]').val();
                            var recipe = [];
                            $('.modal-input-array').each(function(index) {
                                var key = $(this).find('.name').val();
                                var value = $(this).find('.value').val();
                                if(key == null || value == null) return;
                                recipe.push({key, value});
                            });
                            $.post('/inventory/recipe-items/edit', { id, itemName, billName, price, recipe: JSON.stringify(recipe) }, (ret) => {
                                var data = getJSON(ret);
                                if(data == null) return false;
                                closeNoty($noty);
                                sendAlert('Successfully edited item.');
                                c.loadList();
                            });
                        }
                    },
                    {
                        addClass: 'btn btn-danger', text: 'Remove Item', onClick: ($noty) => {
                            
                            $.post('/inventory/recipe-items/remove', { id }, ret => {
                                let data = getJSON(ret);
                                if(data == null) return false;
                                closeNoty($noty);
                                sendAlert('Successfully deleted item.');
                                c.loadList();
                            });
                        }
                    },
                    {
                        addClass: 'btn btn-danger', text: 'Cancel', onClick: closeNoty
                    }]
                });
            });
        }

    });
div#recipe
    h5 Recipe Item
    p.small.info The following is a list of all items requiring a recipe
    div.row
        div.iactions
            div
                div(style='float: left; margin: 10px 10px')
                    div.col-xs-4
                        p.color-grey.search-info Click the search icon to begin searching through recipes. Search using filters with filter:value and separate with commas. True/false or yes/no can be used.
                    div.col-xs-4
                        p.color-grey.search-info Filters:
                    div.col-xs-4
                        p.color-grey.search-info Example: 
                div(style='float: right; margin: 33.5px 5px;')
                    div.link#add-recipe
                        i.fa.fa-plus-square
                        span  Add Recipe Item
    div.row(style='padding: 15px;')
        div#search(style='clear: both; float: right; margin-bottom: 15px; text-align: left;')
            div
                span.fa.fa-search.link#search-icon(style='display: inline; float: right; padding-left: 5px; margin-top: 7px;')
                div#search-pin(style='float: right; display: none;', display='none')
                    input.form-control(type='text', placeholder='Search', style='max-width: 150px; max-height: 30px; background: #111; border: #000; display: inline!important;')
        div.search-filters(style='clear: both; float: right;')
        div.col-md-12(style='border: 1px solid #000; clear: both; margin-bottom: 10px;')
        div#main
        div.pages
            div#pages
